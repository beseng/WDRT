Using `bemio's` Data Readers
============================
In this section the application program interface (API) that allows users how to build custom BEM data readers is first described. Next, the `bemio` standardized hydrodynamic data format (SHDF) is described. Finally a set of tutorials are presented that provide examples of how to use `bemio` to read simulation results from NEMOH, WAMIT, and AQWA and how save the data in the standardized hydrodynamic data format.

.. _loading_data:

Loading Data
~~~~~~~~~~~~

Users can load data by interacting with the following with the following `bemio` modules

	* :mod:`bemio.io.nemoh`
	* :mod:`bemio.io.wamit`
	* :mod:`bemio.io.aqwa`

The python code below shows how a user would interact with the modules in the Python 2.7 environment in order to read NEMOH, WAMIT, and AQWA data. Notice that the :mod:`bemio.io` objects are used to create data objects that contain the hydrodynamic data from the data files produced by the hydrodynamic simulation codes::

	from bemio.io import nemoh  # Import NEMOH module
	from bemio.io import wanit  # Import WAMIT module
	from bemio.io import aqwa   # Import AQWA module

	# Read  NEMOH data into the nemoh_data object
	nemoh_data_obj = nemoh.NemohOutput(out_file='./tutorials/nemoh/data/FIX_ME')

	# Read data from a WAMIT .out file into the wamit_data object
	wamit_data_obj = wamit.WamitOutput(out_file='./tutorials/wamit/data/rm3.out')

	# Read data from a AQWA .lis file into the aqwa_data object 
	wamit_data_obj = aqwa.AqwaOutput(out_file='./tutorials/aqwa/data/aqwa_example_data.lis')

.. _irf_and_ss:

Calculating Impulse Response Functions and Sate Space Coefficients
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Once the data is loaded into the data objects, functions in the :mod:`bemio.io`  modules can be used to calculate the impulse response function and state space hydrodynamic coefficients from the hydrodynamic data. The code below demonstrates how to use the :meth:`calc_irf` and :meth:`calc_ss` functions to calculate and store the impulse response functions for the NEMOH data object. The calculation procedure would be the same for the ``wamit_data_obj`` and ``aqwa_data_obj`` data objects::

	# Calculate the impulse response functions
	nemoh_data_obj.data[i].calc_irf(t_end=100, n_t = 1001, n_w=1001)

	# Calculate the state space coefficients corresponding to the impulse response functions
	nemoh_data_obj.data[i].calc_ss()


.. _standard_data_format:

Writing the Data to the SHDF
~~~~~~~~~~~~~~~~~~~~~~~~~~~~
As previously discussed, the SHDF provides a consistent format to store BEM simulation data from NEMOH, WAMT, AQWA, and user defined hydrodynamic data. The SHDF uses the `Hierarchical Data Format 5 (HDF5) <http://www.hdfgroup.org/HDF5/>`_, a data structure that is similar to a computers file system, to store complex data in a robust and clear fashion. HDF5 files can be easily viewed and modified with `HDF5VIEW <http://www.hdfgroup.org/products/java/hdfview/>`_.

`WEC-Sim <https://github.com/WEC-Sim/WEC-Sim>`_ uses the SHDF as an input file for hydrodynamic data used in wave energy converter simulations.

Once data is loaded read into a data object, the :meth:`write_hdf5` function can be used to write the data to a SHDF file::

	# Import the bem module
	import bemio.data_structures.bem as bem 

	# Write the data to a SHDF file named shdf_example.h5
	bem.write_hdf5(data=nemoh_data_obj.data, out_file='shdf_example.h5')

Once the data is written to the HDF5 file, it can be viewed using `HDFVIEW`_. The figure below shows the structure of the SHDF produced by `bemio` from the NEMOH data. Note that the NEMOH simulation was of a two-body point absorber.

.. figure::  _static/rm3_hdf5.png
   :align:   center
   :width: 600pt

As shown in the figure above above, the SHDF contains three top levels:

	``bem_data``: 
		This folder contains the raw and unprocessed output data files from the BEM code
	``bodyN``: 
		The folders named ``body1``, ``body2``, ... ``bodyN`` contain the processed data for that body. In the case above there are two bodies, corresponding to the two bodies of the two body point absorber. Notice that the folders beneath each ``bodyN`` folder contains the hydrodynamic data for that body.
	``simulatino_parameters``: 
		This data structure contains simulation parameters from the BEM simulation that are independent of the body number. For example, the ``water_depth`` variable contains the water depth used during the BEM simulation

It goes without saying the the SHDF only contains information that is contained within the BEM simulation output files and SHDF files are generated by the `bemio`. It is also possible to manually create SHDF files for use as input to the WEC-Sim code, although this procedure is not described in this Users Guide.